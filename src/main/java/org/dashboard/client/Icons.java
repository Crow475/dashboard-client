package org.dashboard.client;


import javafx.scene.shape.SVGPath;

/* Taken from Lucide icons and transformed into paths using Inkscape 
 *    Lucide icons - https://lucide.dev/icons/
 *    Lucide license - https://lucide.dev/license
*/

public class Icons {
    public enum Icon {
        SETTINGS() {
            @Override
            public String getPath() {
                return(
                    "M 15,4" +
                    "C 13.46,4.16 14.09,5.79 14.96,6.37 16.07,7.48 17.18,8.59 18.29,9.7 19.65,10.81 20.61,8.62 19.36,7.95 18.14,6.73 16.92,5.51 15.7,4.29" +
                    "L 15.38,4.08" +
                    "Z" +
                    "M 19.37,0.96" +
                    "C 17.89,0.82 16.69,1.81 15.76,2.84 11.51,7.1 7.25,11.34 3.01,15.6" +
                    "c -0.77,0.94 -0.89,2.2 -1.29,3.32 -0.22,0.91 -0.68,1.8 -0.69,2.74 0.14,1.06 1.38,1.61 2.3,1.15" +
                    "C 4.82,22.33 6.34,21.96 7.8,21.4 8.84,20.73 9.61,19.72 10.51,18.89 14.35,15.04 18.2,11.21 22.03,7.36 23.43,5.94 23.35,3.46 21.88,2.12 21.22,1.45 20.32,1 19.37,0.96" +
                    "Z" +
                    "m -0.12,1.99" +
                    "c 1.37,0.06 2.42,1.9 1.39,2.97" +
                    "C 16.14,10.44 11.62,14.94 7.12,19.45 6.36,19.93 5.41,20.04 4.56,20.35 4.13,20.48 3.69,20.62 3.25,20.75 3.64,19.53 3.96,18.28 4.4,17.08 6.81,14.58 9.31,12.15 11.76,9.67 13.86,7.57 15.95,5.45 18.07,3.36 18.39,3.08 18.82,2.92 19.25,2.95" +
                    "Z"
                );
            }
        },
        DELETE() {
            @Override
            public String getPath() {
                return(
                    "m 14,10" +
                    "c -1.14,0.04 -1.01,1.25 -1,2.04 0,1.65 0,3.31 0,4.96 0.38,1.93 2.41,0.59 2,-0.78 -0.02,-1.81 0.03,-3.63 -0.03,-5.44" +
                    "C 14.88,10.33 14.46,9.99 14,10" +
                    "Z" +
                    "m -4,0" +
                    "C 8.86,10.04 8.99,11.25 9,12.04 9,13.69 9,15.35 9,17" +
                    "c 0.38,1.93 2.41,0.59 2,-0.78 -0.02,-1.81 0.03,-3.63 -0.03,-5.44" +
                    "C 10.88,10.33 10.46,9.99 10,10" +
                    "Z" +
                    "M 10,1" +
                    "C 8.25,1.01 6.79,2.73 7,4.46 7.08,5.28 6.73,6.28 7.5,6.87 8.8,7.47 9.12,5.96 9,5.02 9,4.32 8.86,3.41 9.68,3.08 10.53,2.91 11.42,3.04 12.28,3 12.96,3.04 13.66,2.91 14.32,3.08 15.24,3.48 14.96,4.52 15,5.3 14.73,6.4 15.96,7.76 16.87,6.5 17.12,5.64 16.96,4.73 17,3.85 16.89,2.16 15.22,0.8 13.54,1 12.36,1 11.18,1 10,1" +
                    "Z" +
                    "M 5,5" +
                    "C 3.86,5.04 3.99,6.25 4,7.04 4.01,11.46 3.98,15.89 4.02,20.31 4.22,21.96 5.88,23.21 7.52,23 10.78,22.99 14.05,23.02 17.31,22.98 18.96,22.78 20.21,21.12 20,19.48 20,14.99 20,10.49 20,6 19.85,4.29 17.58,5.18 18,6.59 18,11.06 18,15.53 18,20" +
                    "c -0.08,0.87 -1,1.09 -1.72,1 -3.14,-0.01 -6.29,0.03 -9.43,-0.02" +
                    "C 6.03,20.79 5.94,19.91 6,19.22 6,14.81 6,10.41 6,6 6.01,5.46 5.54,4.99 5,5" +
                    "Z" +
                    "M 3,5" +
                    "C 1.12,5.33 2.36,7.41 3.72,7 9.48,7 15.24,7 21,7 22.83,6.74 21.79,4.56 20.41,5 14.61,5 8.8,5 3,5" +
                    "Z"
                );
            }
        },
        DRAG() {
            @Override
            public String getPath() {
                return(
                    "m 15,17" +
                    "c -1.33,-0.05 -2.39,1.45 -1.88,2.68 0.39,1.18 1.98,1.72 2.99,0.97 1.06,-0.66 1.19,-2.33 0.23,-3.13" +
                    "C 15.98,17.19 15.49,17 15,17" +
                    "Z" +
                    "M 15,3" +
                    "C 13.67,2.95 12.61,4.45 13.12,5.68 13.52,6.87 15.1,7.4 16.11,6.66 17.18,5.99 17.3,4.33 16.34,3.52 15.98,3.19 15.49,3 15,3" +
                    "Z" +
                    "m 0,7" +
                    "c -1.33,-0.05 -2.39,1.45 -1.88,2.68 0.39,1.18 1.98,1.72 2.99,0.97 1.06,-0.66 1.19,-2.33 0.23,-3.13" +
                    "C 15.98,10.19 15.49,10 15,10" +
                    "Z" +
                    "m -6,7" +
                    "c -1.33,-0.05 -2.39,1.45 -1.88,2.68 0.39,1.18 1.98,1.72 2.99,0.97 1.06,-0.66 1.19,-2.33 0.23,-3.13" +
                    "C 9.98,17.19 9.49,17 9,17" +
                    "Z" +
                    "M 9,3" +
                    "C 7.67,2.95 6.61,4.45 7.12,5.68 7.52,6.87 9.1,7.4 10.11,6.66 11.18,5.99 11.3,4.33 10.34,3.52 9.98,3.19 9.49,3 9,3" +
                    "Z" +
                    "m 0,7" +
                    "C 7.67,9.95 6.61,11.45 7.12,12.68 7.52,13.87 9.1,14.4 10.11,13.66 11.18,12.99 11.3,11.33 10.34,10.52 9.98,10.19 9.49,10 9,10" +
                    "Z"
                );
            }
        },
        CLOSE() {
            @Override
            public String getPath() {
                return(
                    "M 6,5" +
                    "C 4.67,5.07 4.91,6.6 5.74,7.15 9.59,11.01 13.44,14.86 17.29,18.71 18.43,19.79 19.69,17.82 18.52,17.1 14.58,13.17 10.64,9.23 6.71,5.29" +
                    "L 6.38,5.08" +
                    "Z" +
                    "m 11.29,0.29" +
                    "c -4,4 -8,8 -12,12 -1.09,1.25 0.99,2.31 1.7,1.13" +
                    "C 10.9,14.52 14.8,10.61 18.71,6.71 19.62,5.84 18.25,4.33 17.29,5.29" +
                    "Z"
                );
            }
        },
        LOGOUT() {
            @Override
            public String getPath() {
                return(
                    "M 9,11" +
                    "C 7.34,11.12 8.08,13.37 9.44,13 13.29,13 17.15,13 21,13 22.7,12.86 21.93,10.59 20.56,11 16.71,11 12.85,11 9,11" +
                    "Z" +
                    "m 6.29,-4.71" +
                    "c -0.77,0.81 0.14,1.57 0.7,2.12 1.2,1.2 2.39,2.39 3.59,3.59 -1.43,1.43 -2.86,2.86 -4.29,4.29 -1.11,1.56 1.22,2.17 1.9,0.93 1.55,-1.57 3.14,-3.09 4.66,-4.69 0.5,-0.79 -0.3,-1.4 -0.8,-1.9 -1.45,-1.45 -2.89,-2.89 -4.34,-4.34 -0.37,-0.39 -1.05,-0.39 -1.41,0" +
                    "z" +
                    "M 5,2" +
                    "C 3.27,1.95 1.81,3.61 2,5.31 2.01,9.98 1.98,14.64 2.02,19.3 2.15,20.94 3.76,22.19 5.37,22 6.58,22 7.79,22 9,22 10.7,21.86 9.93,19.59 8.56,20 7.31,19.99 6.05,20.03 4.8,19.98 3.92,19.83 3.98,18.87 4,18.19 4,13.79 4,9.4 4,5 3.98,4.07 4.97,3.93 5.68,4 6.79,4 7.89,4 9,4 10.77,3.81 9.87,1.58 8.5,2 7.33,2 6.17,2 5,2" +
                    "Z"
                );
            }
        },
        USER_SETTINGS() {
            @Override
            public String getPath() {
                return(
                    "m 16,17" +
                    "c -1.14,0.04 -1.01,1.25 -1,2.04 0,0.99 0,1.97 0,2.96 0.38,1.93 2.41,0.59 2,-0.78 -0.02,-1.15 0.03,-2.3 -0.03,-3.44" +
                    "C 16.88,17.33 16.46,16.99 16,17" +
                    "Z" +
                    "M 8,9" +
                    "C 6.86,9.04 6.99,10.25 7,11.04 7,12.03 7,13.01 7,14 7.38,15.93 9.41,14.59 9,13.22 8.98,12.07 9.03,10.92 8.97,9.78 8.88,9.33 8.46,8.99 8,9" +
                    "Z" +
                    "M 14,1" +
                    "C 12.86,1.04 12.99,2.25 13,3.04 13,4.03 13,5.01 13,6 13.38,7.93 15.41,6.59 15,5.22 14.98,4.07 15.03,2.92 14.97,1.78 14.88,1.33 14.46,0.99 14,1" +
                    "Z" +
                    "M 3,19" +
                    "C 1.12,19.33 2.36,21.41 3.72,21 6.48,21 9.24,21 12,21 13.83,20.74 12.79,18.56 11.41,19 8.61,19 5.8,19 3,19" +
                    "Z" +
                    "m 13,0" +
                    "c -1.93,0.38 -0.59,2.41 0.78,2 1.41,0 2.81,0 4.22,0 1.83,-0.26 0.79,-2.44 -0.59,-2" +
                    "C 18.94,19 17.47,19 16,19" +
                    "Z" +
                    "M 3,11" +
                    "C 1.12,11.33 2.36,13.41 3.72,13 5.14,13 6.57,13 8,13 9.83,12.74 8.79,10.56 7.41,11 5.94,11 4.47,11 3,11" +
                    "Z" +
                    "m 9,0" +
                    "c -1.93,0.38 -0.59,2.41 0.78,2 2.74,0 5.48,0 8.22,0 1.83,-0.26 0.79,-2.44 -0.59,-2" +
                    "C 17.61,11 14.8,11 12,11" +
                    "Z" +
                    "M 3,3" +
                    "C 1.12,3.33 2.36,5.41 3.72,5 5.81,5 7.91,5 10,5 11.83,4.74 10.79,2.56 9.41,3 7.28,3 5.14,3 3,3" +
                    "Z" +
                    "M 14,3" +
                    "C 12.07,3.38 13.41,5.41 14.78,5 16.85,5 18.93,5 21,5 22.83,4.74 21.79,2.56 20.41,3 18.28,3 16.14,3 14,3" +
                    "Z"
                );
            }
        },
        ADD() {
            @Override
            public String getPath() {
                return(
                    "M 12,7" +
                    "C 10.84,7.05 11,8.28 11,9.09 11,11.39 11,13.7 11,16" +
                    "c 0.4,1.95 2.42,0.56 2,-0.81 -0.02,-2.47 0.03,-4.94 -0.03,-7.41" +
                    "C 12.88,7.33 12.46,6.99 12,7" +
                    "Z" +
                    "M 8,11" +
                    "C 6.05,11.4 7.44,13.42 8.81,13 11.21,13 13.6,13 16,13 17.84,12.72 16.77,10.55 15.39,11 12.93,11 10.46,11 8,11" +
                    "Z" +
                    "M 12,1" +
                    "C 7.31,0.93 2.83,4.23 1.5,8.73 0.12,12.97 1.66,17.95 5.21,20.65 8.83,23.59 14.33,23.79 18.14,21.12 21.87,18.68 23.78,13.84 22.72,9.52 21.71,4.85 17.34,1.19 12.57,1.01 12.38,1 12.19,1 12,1" +
                    "Z" +
                    "m 0,2" +
                    "c 4.08,-0.08 7.92,2.98 8.77,6.96" +
                    "C 21.72,13.79 19.8,18.09 16.3,19.92 12.71,21.93 7.83,21.05 5.19,17.89 2.39,14.78 2.27,9.69 4.92,6.44 6.59,4.28 9.27,2.98 12,3" +
                    "Z"
                );
            }
        },
        CONFIRM() {
            @Override
            public String getPath() {
                return(
                    "M 19.29,5.29" +
                    "C 15.86,8.72 12.43,12.15 9,15.59 7.57,14.15 6.14,12.72 4.71,11.29 3.53,10.21 2.35,12.24 3.54,12.95" +
                    "c 1.58,1.58 3.17,3.17 4.75,4.75 0.72,0.71 1.49,-0.02 1.98,-0.57 3.48,-3.48 6.96,-6.96 10.43,-10.43 0.91,-0.87 -0.45,-2.38 -1.41,-1.41" +
                    "z"
                );
            }
        },
        BACK() {
            @Override
            public String getPath() {
                return(
                    "m 15,5" +
                    "c -0.68,0.05 -1.04,0.68 -1.51,1.09 -1.73,1.73 -3.47,3.47 -5.2,5.2 -0.65,0.63 -0.1,1.39 0.43,1.84 1.86,1.86 3.72,3.72 5.57,5.57 1.06,1.07 2.4,-0.8 1.28,-1.55" +
                    "C 13.85,15.44 12.13,13.72 10.41,12 12.18,10.24 13.94,8.47 15.71,6.71 16.33,6.13 15.88,4.96 15,5" +
                    "Z"
                );
            }
        },
        WARNING() {
            @Override
            public String getPath() {
                return(
                    "m 12,15" +
                    "c -1.71,0 -0.87,2.69 0.51,1.87" +
                    "C 13.42,16.36 12.98,14.97 12,15" +
                    "Z" +
                    "M 12,7" +
                    "C 10.84,7.05 11,8.28 11,9.09 11,10.06 11,11.03 11,12" +
                    "c 0.4,1.95 2.42,0.56 2,-0.81 -0.02,-1.14 0.03,-2.27 -0.03,-3.41" +
                    "C 12.88,7.33 12.46,6.99 12,7" +
                    "Z" +
                    "M 12,1" +
                    "C 7.31,0.93 2.83,4.23 1.5,8.73 0.12,12.97 1.66,17.95 5.21,20.65 8.83,23.59 14.33,23.79 18.14,21.12 21.87,18.68 23.78,13.84 22.72,9.52 21.71,4.85 17.34,1.19 12.57,1.01 12.38,1 12.19,1 12,1" +
                    "Z" +
                    "m 0,2" +
                    "c 4.08,-0.08 7.92,2.98 8.77,6.96" +
                    "C 21.72,13.79 19.8,18.09 16.3,19.92 12.71,21.93 7.83,21.05 5.19,17.89 2.39,14.78 2.27,9.69 4.92,6.44 6.59,4.28 9.27,2.98 12,3" +
                    "Z"
                );
            }
        };

        public abstract String getPath();
    }

    public static SVGPath getIcon(Icon icon, double sizeX, double sizeY) {
        SVGPath svg = new SVGPath();
        svg.setContent(icon.getPath());
        svg.setScaleX(sizeX / 24.0);
        svg.setScaleY(sizeY / 24.0);
        return svg;
    }
}
